{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nexport class LoginComponent {\n  constructor(formBuilder, router, authService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password).subscribe(data => {\n      this.router.navigate(['/dashboard']);\n    }, error => {\n      console.error('Login failed:', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Log In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵtext(7, \"Log In\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n}\\n.container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1rem;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7QUFDSjtBQUNJO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtBQUNOO0FBRUk7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUFBTjtBQUVNO0VBQ0UsbUJBQUE7QUFBUjtBQUdNO0VBQ0Usa0JBQUE7QUFEUiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuICBcclxuICAgIGgyIHtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgZm9ybSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgXHJcbiAgICAgIGlucHV0IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","router","authService","loginForm","group","email","required","password","onSubmit","invalid","login","value","subscribe","data","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["D:\\AC\\CODES\\FUND.AI\\src\\app\\components\\login\\login.component.ts","D:\\AC\\CODES\\FUND.AI\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['/dashboard']);\r\n        },\r\n        error => {\r\n          console.error('Login failed:', error);\r\n        }\r\n      );\r\n  }\r\n}","<div class=\"container\">\r\n    <h2>Log In</h2>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" required>\r\n      <input type=\"password\" formControlName=\"password\" placeholder=\"Password\" required>\r\n      <button type=\"submit\" [disabled]=\"loginForm.invalid\">Log In</button>\r\n    </form>\r\n  </div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAEnB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;MAC1B;;IAGF,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAACN,KAAK,EAAE,IAAI,CAACF,SAAS,CAACQ,KAAK,CAACJ,QAAQ,CAAC,CAC9EK,SAAS,CACRC,IAAI,IAAG;MACL,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,CACF;EACL;EAAC,QAAAE,CAAA,G;qBA5BUnB,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd5B,cAAc;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bf,EAAA,CAAAiB,cAAA,aAAuB;QACfjB,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACfnB,EAAA,CAAAiB,cAAA,cAAsD;QAAxBjB,EAAA,CAAAoB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAA1B,QAAA,EAAU;QAAA,EAAC;QACnDU,EAAA,CAAAsB,SAAA,eAAyE;QAEzEtB,EAAA,CAAAiB,cAAA,gBAAqD;QAAAjB,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAHhEnB,EAAA,CAAAuB,SAAA,GAAuB;QAAvBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAA/B,SAAA,CAAuB;QAGLe,EAAA,CAAAuB,SAAA,GAA8B;QAA9BvB,EAAA,CAAAwB,UAAA,aAAAR,GAAA,CAAA/B,SAAA,CAAAM,OAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}